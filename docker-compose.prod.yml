version: '3'

services:

  proxy:
    image: nginx:alpine
    container_name: proxy
    restart: always
    depends_on:
      - frontend
      - backend
      - auth
    volumes:
      - ./proxy/nginx-prod.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    networks:
      - client
      - server

  frontend:
    container_name: frontend
    build:
      context: ./../react-mobx-demo/
      dockerfile: docker-prod.dockerfile
    restart: always
    volumes:
      - ./frontend/nginx-prod.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - auth
    networks:
      - client

  backend:
    container_name: backend
    build:
      context: ./../node-express-graphql-demo/
      dockerfile: docker-prod.dockerfile
    restart: always
    environment:
      NODE_ENV: production
      MONGO_DB_HOST: mongodb://mongo
      MONGO_DB_PORT: 27017
      DB_NAME: tasks
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PORT: 80
    volumes:
      - ./tools/wait-for-command.sh:/usr/local/bin/wait-for-command.sh
    command: sh -c "wait-for-command.sh -c 'nc -z mongo 27017' && npm run prod"
    depends_on:
      - mongo
    networks:
      - client
      - server

  auth:
    container_name: auth
    build:
      context: ./../node-redis-auth-demo/
      dockerfile: docker-prod.dockerfile
    restart: always
    environment:
      NODE_ENV: production
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PORT: 80
    volumes:
      - ./tools/wait-for-command.sh:/usr/local/bin/wait-for-command.sh
    command: sh -c "wait-for-command.sh -c 'nc -z redis 6379' && npm run prod"
    depends_on:
      - redis
    networks:
      - client
      - server

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - server

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    volumes:
      - ./../data/mongodb:/data/db
    ports:
      - 27017:27017
    networks:
      - server

networks:
  client:
    driver: bridge
  server:
    driver: bridge